<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">




    <!-- 自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的。-->
    <mvc:annotation-driven/>
    <!-- 标签是告诉Spring 来扫描指定包下的类，并注册被@Component，@Controller，@Service，@Repository等注解标记的组件。-->
    <context:component-scan base-package="com.donggua.webpackage"/>



    <!-- mvc view 对应文件的前缀与后缀  action 返回值 为  "index"  => "/index.jsp"  -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>


    <!-- @ResponseBody 返回 json 格式数据 -->
    <bean id="messageAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- Support JSON -->
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>


    <bean id="exceptionMessageAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
        <property name="messageConverters">
            <list>
                <!-- Support JSON -->
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>



    <!--&lt;!&ndash; 数据源dbcp，也可以是c3p0、druid等 &ndash;&gt;-->
    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">-->
        <!--<property name="driverClassName" value="com.mysql.jdbc.Driver"/>-->
        <!--<property name="url" value="jdbc:mysql://127.0.0.1:3306/sakila?characterEncoding=utf8"/>-->
        <!--<property name="username" value="root"/>-->
        <!--<property name="password" value="123456"/>-->
        <!--&lt;!&ndash;<property name="maxActive" value="10"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="maxIdle" value="10"/>&ndash;&gt;-->
    <!--</bean>-->


    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--&lt;!&ndash;dataSource属性指定要用到的连接池&ndash;&gt;-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--&lt;!&ndash;configLocation属性指定mybatis的核心配置文件&ndash;&gt;-->
        <!--<property name="configLocation" value="classpath:Configuration.xml"/>-->
        <!--&lt;!&ndash; 所有配置的mapper文件 &ndash;&gt;-->
        <!--&lt;!&ndash;这个classpath*是什么意思WDY??&ndash;&gt;-->
        <!--<property name="mapperLocations" value="classpath*:mappers/*.xml"/>-->
    <!--</bean>-->


    <!--&lt;!&ndash;下面这个配置很重要，可以自动扫描dao类并生成对应的bean(WDY!!)&ndash;&gt;-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value="com.donggua.webpackage.countrydao"/>-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
    <!--</bean>-->


    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--&lt;!&ndash; 注入数据库连接池 &ndash;&gt;-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->

</beans>